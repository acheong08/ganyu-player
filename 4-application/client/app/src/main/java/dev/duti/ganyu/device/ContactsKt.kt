//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: device.proto

package dev.duti.ganyu.device;

@kotlin.jvm.JvmSynthetic
public inline fun contacts(block: dev.duti.ganyu.device.ContactsKt.Dsl.() -> kotlin.Unit): dev.duti.ganyu.device.Contacts =
  dev.duti.ganyu.device.ContactsKt.Dsl._create(dev.duti.ganyu.device.Contacts.newBuilder()).apply { block() }._build()
public object ContactsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: dev.duti.ganyu.device.Contacts.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.duti.ganyu.device.Contacts.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.duti.ganyu.device.Contacts = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContactsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .device.Contact contacts = 1;</code>
     */
     public val contacts: com.google.protobuf.kotlin.DslList<dev.duti.ganyu.device.Contact, ContactsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getContactsList()
      )
    /**
     * <code>repeated .device.Contact contacts = 1;</code>
     * @param value The contacts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addContacts")
    public fun com.google.protobuf.kotlin.DslList<dev.duti.ganyu.device.Contact, ContactsProxy>.add(value: dev.duti.ganyu.device.Contact) {
      _builder.addContacts(value)
    }/**
     * <code>repeated .device.Contact contacts = 1;</code>
     * @param value The contacts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignContacts")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<dev.duti.ganyu.device.Contact, ContactsProxy>.plusAssign(value: dev.duti.ganyu.device.Contact) {
      add(value)
    }/**
     * <code>repeated .device.Contact contacts = 1;</code>
     * @param values The contacts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllContacts")
    public fun com.google.protobuf.kotlin.DslList<dev.duti.ganyu.device.Contact, ContactsProxy>.addAll(values: kotlin.collections.Iterable<dev.duti.ganyu.device.Contact>) {
      _builder.addAllContacts(values)
    }/**
     * <code>repeated .device.Contact contacts = 1;</code>
     * @param values The contacts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllContacts")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<dev.duti.ganyu.device.Contact, ContactsProxy>.plusAssign(values: kotlin.collections.Iterable<dev.duti.ganyu.device.Contact>) {
      addAll(values)
    }/**
     * <code>repeated .device.Contact contacts = 1;</code>
     * @param index The index to set the value at.
     * @param value The contacts to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setContacts")
    public operator fun com.google.protobuf.kotlin.DslList<dev.duti.ganyu.device.Contact, ContactsProxy>.set(index: kotlin.Int, value: dev.duti.ganyu.device.Contact) {
      _builder.setContacts(index, value)
    }/**
     * <code>repeated .device.Contact contacts = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearContacts")
    public fun com.google.protobuf.kotlin.DslList<dev.duti.ganyu.device.Contact, ContactsProxy>.clear() {
      _builder.clearContacts()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun dev.duti.ganyu.device.Contacts.copy(block: dev.duti.ganyu.device.ContactsKt.Dsl.() -> kotlin.Unit): dev.duti.ganyu.device.Contacts =
  dev.duti.ganyu.device.ContactsKt.Dsl._create(this.toBuilder()).apply { block() }._build()
